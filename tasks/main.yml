---
- name: Create Kubernetes config directory
  file:
    path: "{{k8s_conf_dir}}"
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - k8s-worker

- name: Copy certificates
  copy:
    src: "{{local_cert_dir}}/{{item}}"
    dest: "{{k8s_conf_dir}}/{{item}}"
    mode: 0640
    owner: root
    group: root
  with_items:
    - "{{k8s_certificates}}"
  tags:
    - k8s-worker

- name: Ensure Kubernetes config directory
  file:
    path: "{{k8s_conf_dir}}"
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - k8s-worker

- name: Ensure Kubelet config directory
  file:
    path: "{{k8s_kubelet_conf_dir}}"
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - k8s-worker

- name: Copy certificates
  copy:
    src: "{{local_cert_dir}}/{{item}}"
    dest: "{{k8s_conf_dir}}/{{item}}"
    mode: 0640
    owner: root
    group: root
  with_items:
    - "{{k8s_certificates}}"
  tags:
    - k8s-worker

- name: Create download directory (used to store archives)
  file:
    path: "{{k8s_download_dir}}"
    state: directory
    mode: 0750
  tags:
    - k8s-worker

- name: Ensure CNI plugins directory
  file:
    path: "{{k8s_cni_dir}}"
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - k8s-worker

- name: Download CNI plugins
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/network-plugins/{{k8s_cni_plugins}}.tar.gz
    dest: "{{k8s_download_dir}}/{{k8s_cni_plugins}}.tar.gz"
    mode: 0640
  tags:
    - k8s-worker

- name: Unzip CNI plugins
  unarchive:
    src: "{{k8s_download_dir}}/{{k8s_cni_plugins}}.tar.gz"
    dest: "{{k8s_cni_dir}}"
    remote_src: yes
    creates: "{{k8s_cni_dir}}/bin/cnitool"
  tags:
    - k8s-worker

- name: Downloading official Kubernetes worker binaries
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v{{k8s_release}}/bin/linux/amd64/{{item}}
    dest: "{{k8s_bin_dir}}"
    mode: 0755
  with_items:
    - "{{k8s_worker_binaries}}"
  tags:
    - k8s-worker

- name: Create kubeconfig
  template:
    src: var/lib/kubelet/kubeconfig.j2
    dest: "{{k8s_kubelet_conf_dir}}/kubeconfig"
    owner: root
    group: root
    mode: 0644
  tags:
    - k8s-worker

- name: Create kubelet.service systemd file
  template:
    src: etc/systemd/system/kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
  tags:
    - k8s-worker

- meta: flush_handlers

- name: Enable Kubelet
  service:
    name: kubelet
    enabled: yes
    state: started
  tags:
    - k8s-worker

- name: Create kube-proxy.service systemd file
  template:
    src: etc/systemd/system/kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
  tags:
    - k8s-worker

- meta: flush_handlers

- name: Enable kube-proxy
  service:
    name: kube-proxy
    enabled: yes
    state: started
  tags:
    - k8s-worker
