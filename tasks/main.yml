---
- name: Remove swapfile from /etc/fstab
  ansible.posix.mount:
    name: swap
    fstype: swap
    state: absent
  tags:
    - k8s-worker

- name: Disable swap
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0
  changed_when: false
  tags:
    - k8s-worker

- name: Create worker nodes configuration base directory
  ansible.builtin.file:
    path: "{{ k8s_worker_conf_dir }}"
    state: directory
    mode: "0750"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Create PKI directory
  ansible.builtin.file:
    path: "{{ k8s_worker_pki_dir }}"
    state: directory
    mode: "0750"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Ensure Kubelet config directory
  ansible.builtin.file:
    path: "{{ k8s_worker_kubelet_conf_dir }}"
    state: directory
    mode: "0700"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Ensure Kubeproxy config directory
  ansible.builtin.file:
    path: "{{ k8s_worker_kubeproxy_conf_dir }}"
    state: directory
    mode: "0700"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Install required OS packages
  ansible.builtin.apt:
    state: present
    pkg: "{{ package }}"
  loop: "{{ k8s_worker_os_packages }}"
  loop_control:
    loop_var: "package"
  tags:
    - k8s-worker

- name: Copy worker certificates (part 1)
  ansible.builtin.copy:
    src: "{{ k8s_ca_conf_directory }}/{{ item }}"
    dest: "{{ k8s_worker_pki_dir }}/{{ item }}"
    mode: "0640"
    owner: "root"
    group: "root"
  with_items:
    - "{{ k8s_worker_certificates }}"
  tags:
    - k8s-worker

- name: Copy worker certificates (part 2)
  ansible.builtin.copy:
    src: "{{ k8s_ca_conf_directory }}/cert-{{ inventory_hostname }}.pem"
    dest: "{{ k8s_worker_pki_dir }}/cert-{{ inventory_hostname }}.pem"
    mode: "0640"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Copy worker certificates (part 3)
  ansible.builtin.copy:
    src: "{{ k8s_ca_conf_directory }}/cert-{{ inventory_hostname }}-key.pem"
    dest: "{{ k8s_worker_pki_dir }}/cert-{{ inventory_hostname }}-key.pem"
    mode: "0640"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Downloading official Kubernetes worker binaries
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_worker_release }}/bin/linux/amd64/{{ item }}"
    checksum: "sha512:https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_worker_release }}/bin/linux/amd64/{{ item }}.sha512"
    dest: "{{ k8s_worker_bin_dir }}"
    owner: "root"
    group: "root"
    mode: "0755"
  with_items:
    - "{{ k8s_worker_binaries }}"
  notify:
    - Restart kube-proxy
    - Restart kubelet
  tags:
    - k8s-worker

- name: Create kubelet kubeconfig
  ansible.builtin.include_tasks:
    file: "authconfig/kubelet.yml"
    apply:
      tags:
        - k8s-worker
        - k8s-auth-config-kubelet

- name: Create kube-proxy kubeconfig
  ansible.builtin.include_tasks:
    file: "authconfig/kube-proxy.yml"
    apply:
      tags:
        - k8s-worker

- name: Create kubelet-config.yaml
  ansible.builtin.copy:
    content: "{{ k8s_worker_kubelet_conf_yaml }}"
    dest: "{{ k8s_worker_kubelet_conf_dir }}/kubelet-config.yaml"
    mode: "0600"
  tags:
    - k8s-worker
    - kubelet-config-yaml

- name: Create kubeproxy-config.yaml
  ansible.builtin.copy:
    content: "{{ k8s_worker_kubeproxy_conf_yaml }}"
    dest: "{{ k8s_worker_kubeproxy_conf_dir }}/kubeproxy-config.yaml"
    mode: "0600"
  tags:
    - k8s-worker
    - kubeproxy-config-yaml

- name: Combine k8s_worker_kubelet_settings and k8s_worker_kubelet_settings_user (if defined)
  ansible.builtin.set_fact:
    k8s_worker_kubelet_settings: "{{ k8s_worker_kubelet_settings | combine(k8s_worker_kubelet_settings_user | default({})) }}"
  tags:
    - k8s-worker

- name: Create kubelet.service systemd file
  ansible.builtin.template:
    src: etc/systemd/system/kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    owner: "root"
    group: "root"
    mode: "0644"
  notify:
    - Reload systemd
    - Restart kubelet
  tags:
    - k8s-worker

- name: Ensure Kubeproxy config directory
  ansible.builtin.file:
    path: "{{ k8s_worker_kubeproxy_conf_dir }}"
    state: "directory"
    mode: "0700"
    owner: "root"
    group: "root"
  tags:
    - k8s-worker

- name: Combine k8s_worker_kubeproxy_settings and k8s_worker_kubeproxy_settings_user (if defined)
  ansible.builtin.set_fact:
    k8s_worker_kubeproxy_settings: "{{ k8s_worker_kubeproxy_settings | combine(k8s_worker_kubeproxy_settings_user | default({})) }}"
  tags:
    - k8s-worker

- name: Create kube-proxy.service systemd file
  ansible.builtin.template:
    src: "etc/systemd/system/kube-proxy.service.j2"
    dest: "/etc/systemd/system/kube-proxy.service"
    owner: "root"
    group: "root"
    mode: "0644"
  notify:
    - Reload systemd
    - Restart kube-proxy
  tags:
    - k8s-worker

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable Kubelet
  ansible.builtin.service:
    name: kubelet
    enabled: true
    state: started
  tags:
    - k8s-worker

- name: Enable kube-proxy
  ansible.builtin.service:
    name: kube-proxy
    enabled: true
    state: started
  tags:
    - k8s-worker
